# Analysis patterns for matching
analysis_patterns:
  experience:
    # Explicit year mentions (prioritize these patterns)
    - '(\d+)\+?\s*(?:years?|yrs?)(?:\s+of)?\s+(?:experience|work|professional|research)'
    - 'experience\s+of\s+(\d+)\+?\s*(?:years?|yrs?)'
    - 'with\s+(\d+)\+?\s*(?:years?|yrs?)(?:\s+of)?\s+experience'
    - '(\d+)\+?\s*(?:years?|yrs?)(?:\s+of)?\s+(?:industry|professional|research)'
    - '(?:over|more\s+than)\s+(\d+)\+?\s*(?:years?|yrs?)'
    - 'career\s+spanning\s+(\d+)\+?\s*(?:years?|yrs?)'
    
    # Date ranges (secondary patterns)
    - '(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)[a-z]*\.?\s+(\d{4})\s*(?:-|to|–)\s*(?:(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)[a-z]*\.?\s+)?(\d{4}|\s*(?:Present|Current|Now))'
    - '(\d{4})\s*(?:-|to|–)\s*(?:Present|Current|Now)'
    - '(?:since|from)\s+(\d{4})'
    - '(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)[a-z]*\.?\s+(\d{4})'
  
  location_patterns:
    us: '\b(?:US|USA|United\s+States|Dallas|TX|Texas|Boston|MA|Massachusetts|New\s+York|NY|California|CA|Seattle|WA|Washington|Chicago|IL|Illinois|Atlanta|GA|Georgia|San\s+Mateo|Minneapolis|MN|Minnesota|Saint\s+Paul|St\.\s*Paul)\b'
    india: '\b(?:India|Indian|Bangalore|Mumbai|Delhi|Hyderabad|Chennai|Pune|Kolkata)\b'

  skills:
    python: '\b(?:python|py3?|python[23]|pandas|numpy|scipy|scikit|pytorch|tensorflow)\b(?:\s*(?:development|programming|coding|experience|engineer|developer|skilled at|skilled|programming|coding|development|engineering|packages?|tools?|managers?))?'
    machine_learning: '\b(?:machine\s*learning|ml|deep\s*learning|dl|neural\s*networks?|transformer|bert|clip|stable\s*diffusion|vision\s*transformer|llm|large\s*language\s*models?|generative\s*ai)\b'
    statistics: '\b(?:statistical|stats?|probability|regression|hypothesis\s*testing|statistical\s*analysis|mathematical|mathematics|math|quantitative)\b'
    data_visualization: '\b(?:data\s*viz|visualization|tableau|powerbi|matplotlib|seaborn|plotly|charts?|graphs?|plotting)\b'
    git: '\b(?:git(?:hub|lab)?|version\s*control|source\s*control)\b'
    linear_algebra: '\b(?:linear\s*algebra|matrices|vectors|mathematical|mathematics|math|quantitative|applied\s*math)\b'
    probability: '\b(?:probability|statistics|statistical|stochastic|random|distribution|mathematical|mathematics|math|quantitative)\b'
    tensorflow: '\b(?:tensorflow|tf|keras|deep\s*learning|neural\s*networks?)\b'
    pytorch: '\b(?:pytorch|torch|deep\s*learning|neural\s*networks?)\b'
    scikit_learn: '\b(?:scikit[\s-]?learn|sklearn|machine\s*learning|ml)\b'
    pandas: '\b(?:pandas|pd|dataframe|data\s*analysis|data\s*manipulation)\b'
    numpy: '\b(?:numpy|np|numerical|scientific\s*computing|array)\b'
    deep_learning: '\b(?:deep\s*learning|dl|neural\s*networks?|cnn|rnn|lstm|transformer|bert)\b'
    langchain: '\b(?:langchain|llm\s*tools?|llm\s*framework|large\s*language\s*model\s*tools?)\b'
    docker: '\b(?:docker|containerization|containers?|container\s*orchestration)\b'
    kubernetes: '\b(?:kubernetes|k8s|container\s*orchestration|orchestration|aks|eks|gke)\b'
    mlflow: '\b(?:mlflow|ml\s*flow|machine\s*learning\s*workflow|model\s*tracking)\b'
    databricks: '\b(?:databricks|spark|big\s*data|data\s*processing)\b'
    mapreduce: '\b(?:map\s*reduce|hadoop|distributed\s*computing|big\s*data)\b'
    streaming: '\b(?:streaming|real[\s-]time|kafka|kinesis|pub[\s-]sub|event[\s-]driven)\b'

  context:
    - 'developed'
    - 'implemented'
    - 'architected'
    - 'designed'
    - 'automated'
    - 'optimized'
    - 'managed'
    - 'deployed'
    - 'experience'
    - 'development'
    - 'proficient'
    - 'expertise'
    - 'programming'
    - 'coding'
    - 'engineer'
    - 'developer'
    - 'worked'
    - 'using'
    - 'familiar'
    - 'knowledge'
    - 'built'
    - 'created'
    - 'maintained'
    - 'languages'
    - 'skills'
    - 'technical'
    - 'stack'
    - 'tools'
    - 'skilled'
    - 'developed'
    - 'implementing'
    - 'building'
    - 'creating'
    - 'responsible for'
    - 'led'
    - 'leading'
    - 'architecture'
    - 'solution'
    - 'research'
    - 'studied'
    - 'published'
    - 'paper'
    - 'thesis'
    - 'dissertation'
    - 'academic'

# Enhanced scoring configuration
scoring_config:
  weights:
    technical:
      skills: 0.40
      platform_specific_experience: 0.15 
      experience: 0.35
      role_relevance: 0.10

  thresholds:
    strong_match: 85
    good_match: 70
    potential_match: 50
    minimum_match: 30

  skill_weights:
    required: 0.75
    preferred: 0.25
    
  penalties:
    missing_required: 0.20
    experience_gap: 0.25
    primary_skill_gap: 0.15

# Job role definitions remain unchanged
job_roles:
  "Data Scientist":
    role_type: technical
    education:
      minimum: "Bachelor's degree"
      preferred: "Master's or Doctoral degree"
      fields:
        - "Computer Science"
        - "Electrical Engineering"
        - "Statistics"
        - "Related fields"
    scoring_weights: technical
    min_years_experience: 5
    scoring_constraints:
      max_score: 100
      required_skills_threshold: 0.70
      minimum_skills_match: 0.60
    required_skills:
      - Python
      - Machine Learning
      - Statistics
      - Data Visualization
      - Git
      - "Linear Algebra OR Probability"
    preferred_skills:
      - TensorFlow
      - PyTorch
      - Scikit-learn
      - Pandas
      - NumPy
      - Deep Learning
      - LangChain
      - Docker
      - Kubernetes
      - MLflow
      - Databricks
      - MapReduce
      - Streaming Technology
    skill_weights:
      core_ml: 0.30
      math: 0.25
      data_tools: 0.25
      devops: 0.20
    skill_groups:
      core_ml:
        - Machine Learning
        - Deep Learning
        - TensorFlow
        - PyTorch
      math:
        - Statistics
        - Linear Algebra
        - Probability
      data_tools:
        - Python
        - Pandas
        - NumPy
        - Data Visualization
      devops:
        - Git
        - Docker
        - Kubernetes
    key_responsibilities:
      - Collaborate with internal and external teams
      - Develop and test machine learning models
      - Deploy and optimize ML solutions
      - Create application specifications and documentation
      - Troubleshoot performance issues
      - Transform data into business intelligence
    soft_skills:
      - Strong verbal communication
      - Strong written communication
      - Self-driven
      - Project leadership
      - Independent work capability
      - Team collaboration

  "Software Development Engineer, C3":
      role_type: technical
      education:
        minimum: "Bachelor's degree"
        fields:
          - "Computer Science"
          - "Related fields"
          - "Equivalent combination of education and experience"
      scoring_weights: technical
      min_years_experience: 5
      scoring_constraints:
        max_score: 100
        required_skills_threshold: 0.60
        minimum_skills_match: 0.50
        experience_weight: 0.30
        primary_skill_group: "frontend"  # Added to indicate primary skill focus
        primary_skill_weight: 0.65       # Weight for primary skill group
        experience_penalty: 0.25         # Penalty for not meeting min years
        skill_group_penalty: 0.15        # Penalty for weak primary skill group
      required_skills:
        - JavaScript
        - React
        - Frontend Development
        - Web Development
        - Git
        - REST APIs
        - State Management
        - CI/CD
      preferred_skills:
        - TypeScript
        - Vue.js
        - Angular
        - Node.js
        - GraphQL
        - AWS
        - Docker
        - Kubernetes
      skill_groups:
        frontend:  # Primary skill group for this role
          - JavaScript
          - React
          - Redux
          - Vue.js
          - Angular
          - TypeScript
          - Frontend Development
          - Web Development
        architecture:
          - System Design
          - REST APIs
          - Microservices
          - GraphQL
        devops:
          - Git
          - GitLab
          - CI/CD
          - AWS
          - Azure
        data:
          - SQL
          - NoSQL
          - ETL
      experience_levels:
        junior: [0, 3]
        mid: [3, 5]
        senior: [5, null]
      skill_variations:
        # Frontend variations
        frontend_development: [
          'frontend', 'front-end', 'front end',
          'frontend developer', 'front-end developer', 'front end developer',
          'frontend development', 'front-end development', 'front end development',
          'frontend engineer', 'front-end engineer', 'front end engineer',
          'ui development', 'ui developer', 'user interface',
          'client-side', 'client side'
        ]
        
        web_development: [
          'web development', 'web developer', 'web engineer',
          'web application', 'webapp', 'web app',
          'website development', 'web platform',
          'web technologies', 'web stack'
        ]
        
        rest_apis: [
          'rest', 'restful', 'rest api', 'restful api', 
          'rest apis', 'restful apis', 'rest services',
          'rest architecture', 'restful services',
          'restful web services', 'rest endpoints',
          'api development', 'api', 'apis'
        ]

        # Other variations unchanged but included for completeness
        javascript: ['javascript', 'js', 'ecmascript', 'es6']
        react: ['react', 'reactjs', 'react.js', 'react native']
        state_management: ['redux', 'vuex', 'state', 'flux', 'context', 'state management']
        typescript: ['typescript', 'ts', 'typed javascript']
        vue: ['vue', 'vuejs', 'vue.js']
        angular: ['angular', 'ng', 'angular.js', 'angularjs']
        git: ['git', 'github', 'gitlab', 'version control']
        ci_cd: ['ci/cd', 'continuous integration', 'continuous deployment', 'devops']
        
  "Site Reliability Engineer":
    role_type: technical
    education:
      minimum: "Bachelor's degree"
      fields:
        - "Computer Science"
        - "Information Technology"
        - "Related fields"
        - "Equivalent combination of education and experience"
    scoring_weights: technical
    min_years_experience: 3
    scoring_constraints:
      max_score: 100
      required_skills_threshold: 0.60
      minimum_skills_match: 0.50
    required_skills:
      - Linux
      - Python OR Ruby
      - AWS OR GCP OR Azure
      - Kubernetes
      - CI/CD
      - Infrastructure as Code
      - Networking
      - Database Management
      - NoSQL
      - Cassandra
      - Ansible OR Terraform
    preferred_skills:
      - Docker
      - Jenkins
      - GitOps
      - CI/CD
      - Prometheus
      - Grafana
      - ELK Stack
      - Istio
      - Groovy
      - Bash
      - CloudFormation
    skill_weights:
      infrastructure: 0.30
      cloud_platforms: 0.25
      automation: 0.25
      monitoring: 0.20
    skill_groups:
      infrastructure:
        - Linux
        - Kubernetes
        - Docker
        - Networking
        - Database Management
      cloud_platforms:
        - AWS
        - GCP
        - Azure
      automation:
        - Python
        - Ruby
        - Ansible
        - Terraform
        - CI/CD
      monitoring:
        - Prometheus
        - Grafana
        - ELK Stack
    key_responsibilities:
      - "Ensure maximum system uptime and availability"
      - "Implement end-to-end monitoring and alerting"
      - "Resolve complex technical issues"
      - "Develop resilient system architectures"
      - "Lead automation initiatives"
      - "Design and configure infrastructure"
      - "Collaborate with Services and Engineering teams"
    soft_skills:
      - "Problem-solving abilities"
      - "Critical thinking"
      - "Strong communication"
      - "Cross-functional collaboration"
      - "System administration"
      - "DevOps practices"

  "Generative AI Architect":
    role_type: technical
    scoring_weights: technical
    min_years_experience: 8
    scoring_constraints:
      max_score: 100
      required_skills_threshold: 0.7
    required_skills:
      - MLOps
      - AI Architecture
      - Containerization
      - Model Optimization
      - Python
      - Cloud Platforms (GCP, AWS, Azure)
    preferred_skills:
      - OpenAI API
      - TensorFlow
      - PyTorch
      - RLHF
      - Data Science
      - ETL Pipeline Management
      - Kubernetes
